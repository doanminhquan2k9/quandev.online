    (function() {
        'use strict';

        // --- PH·∫¶N 0: SPLASH SCREEN KHI KH·ªûI ƒê·ªòNG ---
        function showSplashScreen() {
            const overlay = document.createElement('div');
            Object.assign(overlay.style, {
                position: 'fixed',
                top: '0', left: '0', width: '100vw', height: '100vh',
                backgroundColor: 'rgba(0, 0, 0, 0.95)', zIndex: '9999999',
                display: 'flex', justifyContent: 'center', alignItems: 'center',
                opacity: '0', transition: 'opacity 0.5s ease-in-out'
            });
            const text = document.createElement('div');
            text.innerHTML = 'ƒê√¢y l√† code ƒë∆∞·ª£c t·∫°o b·ªüi<br><span style="font-size: 1.5em; color: #00ff7f;">Minh Qu√¢n Dev</span>';
            Object.assign(text.style, {
                color: '#FFFFFF', fontSize: '2.5em',
                fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
                fontWeight: 'bold', textAlign: 'center',
                textShadow: '0 0 15px rgba(0, 255, 127, 0.8)'
            });
            overlay.appendChild(text);
            document.body.appendChild(overlay);
            setTimeout(() => { overlay.style.opacity = '1'; }, 10);
            setTimeout(() => {
                overlay.style.opacity = '0';
                setTimeout(() => { if (document.body.contains(overlay)) { document.body.removeChild(overlay); } }, 500);
            }, 2000);
        }
        showSplashScreen();

        // --- PH·∫¶N 1: BANNER "MINH QU√ÇN DEV" ---
        function showDevBanner() {
            const devBanner = document.createElement('div');
            devBanner.textContent = 'Minh Qu√¢n Dev';
            Object.assign(devBanner.style, {
                position: 'fixed', bottom: '10px', left: '10px',
                backgroundColor: 'rgba(0, 0, 0, 0.7)', color: '#00ff7f',
                padding: '5px 10px', borderRadius: '5px',
                fontFamily: '"Courier New", Courier, monospace', fontSize: '14px',
                zIndex: '99999', boxShadow: '0 0 10px rgba(0, 255, 127, 0.5)'
            });
            document.body.appendChild(devBanner);
        }
        showDevBanner();

        // --- PH·∫¶N 2: H√ÄM X·ª¨ L√ù V√Ä HI·ªÇN TH·ªä ƒêI·ªÇM (GIAO DI·ªÜN T·ªêI GI·∫¢N) ---
        function handleScoreData(data) {
            if (data && data.data && data.data.max !== undefined) {
                const score = (data.data.max / 10).toFixed(1);
                console.log(`üéâ [Minh Qu√¢n Dev] T√¨m th·∫•y ƒëi·ªÉm : ${score} ƒëi·ªÉm`);
                showScoreNotification(score);
                return true;
            }
            return false;
        }

        function showScoreNotification(score) {
            const oldNotification = document.getElementById('mq-score-notification');
            if (oldNotification) { oldNotification.remove(); }

            const notification = document.createElement('div');
            notification.id = 'mq-score-notification';
            
            Object.assign(notification.style, {
                position: 'fixed', top: '20px', right: '-400px',
                width: '340px',
                background: '#1f2937', // Dark Slate
                color: '#d1d5db', // Light Gray
                padding: '16px', borderRadius: '8px', zIndex: '10000',
                boxShadow: '0 10px 20px rgba(0,0,0,0.4)',
                fontFamily: "'Inter', 'Segoe UI', 'Roboto', sans-serif",
                transition: 'right 0.6s cubic-bezier(0.25, 1, 0.5, 1)',
                borderLeft: '4px solid #34d399' // Emerald Green Accent
            });

            notification.innerHTML = `
                <div style="display: flex; align-items: start; gap: 12px;">
                    <div style="flex-shrink: 0; margin-top: 4px;">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9 12L11 14L15 10M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21Z" stroke="#34d399" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </div>
                    <div style="flex-grow: 1;">
                        <div style="display: flex; justify-content: space-between; align-items: center;">
                            <h3 style="margin: 0; font-size: 16px; font-weight: 600; color: #ffffff;">ƒêi·ªÉm </h3>
                            <button id="mq-close-btn" style="background:none; border:none; color:#9ca3af; font-size:24px; cursor:pointer; padding:0; line-height:1;">&times;</button>
                        </div>
                        <p style="margin: 4px 0 0; font-size: 14px;">ƒêi·ªÉm c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n:</p>
                        <div style="font-size: 36px; font-weight: 800; color: #ffffff; margin-top: 8px;">${score} <span style="font-size: 20px; font-weight: 500; color: #9ca3af;">ƒëi·ªÉm</span></div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(notification);
            setTimeout(() => { notification.style.right = '20px'; }, 100);

            document.getElementById('mq-close-btn').onclick = function() {
                notification.style.right = '-400px';
                setTimeout(() => { if(document.body.contains(notification)) { document.body.removeChild(notification); } }, 600);
            };
            
            setTimeout(() => { if (document.body.contains(notification)) { document.getElementById('mq-close-btn').click(); } }, 15000);
        }

        // --- PH·∫¶N 3: CAN THI·ªÜP NETWORK (KH√îNG THAY ƒê·ªîI) ---
        const originalOpen = XMLHttpRequest.prototype.open;
        XMLHttpRequest.prototype.open = function() { this._url = arguments[1]; originalOpen.apply(this, arguments); };
        const originalSend = XMLHttpRequest.prototype.send;
        XMLHttpRequest.prototype.send = function() {
            if (this._url && this._url.includes('/week-test')) {
                this.addEventListener('load', function() {
                    if (this.readyState === 4 && this.status === 200) {
                        try { handleScoreData(JSON.parse(this.responseText)); } catch (e) {}
                    }
                });
            }
            originalSend.apply(this, arguments);
        };
        const originalFetch = window.fetch;
        window.fetch = function(...args) {
            const url = args[0];
            if (url && (typeof url === 'string') && url.includes('/week-test')) {
                return originalFetch.apply(this, args).then(response => {
                    if (response.ok) {
                        response.clone().json().then(data => { handleScoreData(data); });
                    }
                    return response;
                });
            }
            return originalFetch.apply(this, args);
        };
        
        console.log('%cüöÄ MINH QU√ÇN DEV - Hi·ªÉn Th·ªã ƒêi·ªÉm B·ªã ·∫®n ƒê√É K√çCH HO·∫†T üöÄ', 'color: #00ff7f; font-size: 16px; font-weight: bold;');
    })();
